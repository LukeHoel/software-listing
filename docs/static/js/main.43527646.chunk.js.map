{"version":3,"sources":["components/Card/Card.tsx","utils/Animation.tsx","components/Software/Software.tsx","components/Navbar/Navbar.tsx","components/Menu/Menu.tsx","components/App/App.tsx","index.tsx"],"names":["Card","props","react_default","a","createElement","className","concat","class","style","children","slideIn","index","animation","SoftwareList","input","count","length","map","current","Software","Card_Card_Card","src","logo","alt","name","desc","Navbar","Menu","width","menuOpen","menuItems","menuItem","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","toggleMenu","bind","assertThisInitialized","setState","Navbar_Navbar_Navbar","func","onClick","Menu_Menu_Menu","software","React","Component","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"21BAGaA,qBAAO,SAACC,GAAD,OAClBC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,QAAAC,OAAUL,EAAMM,OAAS,IAAMC,MAAOP,EAAMO,OACvDP,EAAMQ,YCFEC,EAAU,SAACC,GACtB,MAAO,CACLC,UAAS,SAAAN,OALmB,GACM,IAKRK,EADjB,qBCOEE,EANM,SAACC,GAAD,OACnBZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeG,ODGHO,ECHuBD,EAAME,ODIjD,CACLJ,UAAS,gBAAAN,OAZmB,GACM,IAYRS,EADjB,wBCJRD,EAAMG,IAAI,SAACC,EAASP,GAAV,OAAoBQ,EAASD,EAASP,MDEzB,IAACI,GCIvBI,EAAW,SAACL,EAAoBH,GAArB,OACfT,EAAAC,EAAAC,cAACgB,EAAD,CAAMb,MAAM,WAAWC,MAAOE,EAAQC,IACpCT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKiB,IAAG,OAAAf,OAASQ,EAAMQ,MAAQC,IAAKT,EAAMU,OAC1CtB,EAAAC,EAAAC,cAAA,SAAIU,EAAMU,OAEZtB,EAAAC,EAAAC,cAAA,SAAIU,EAAMW,eCjBDC,SAAS,SAACzB,GAAD,OACpBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUJ,EAAMQ,YCIpBkB,SAAO,SAAC1B,GAAD,OAElBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOG,MAAO,CAAEoB,MAAO3B,EAAM4B,SAJ9B,QAIqD,IAEjE3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcG,MAAO,CAAEoB,MAN1B,UAOT3B,EAAM6B,UAAUb,IAAI,SAACc,GAAD,OACnB7B,EAAAC,EAAAC,cAAA,WAAM2B,OAIZ7B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAWJ,EAAMQ,aCkBtBuB,cAzBb,SAAAA,EAAY/B,GAAY,IAAAgC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACtBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMnC,KACDuC,MAAQ,CAAEX,UAAU,GAEzBI,EAAKQ,WAAaR,EAAKQ,WAAWC,KAAhBR,OAAAS,EAAA,EAAAT,CAAAD,IAJIA,4EAQtBG,KAAKQ,SAAS,CAAEf,UAAWO,KAAKI,MAAMX,4CAItC,OACE3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACyC,EAAD,MFpBmBC,EEqBLV,KAAKK,WFpBzBvC,EAAAC,EAAAC,cAAA,KAAG2C,QAASD,EAAMzC,UAAU,6BAA5B,SEqBQH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,qBAEFH,EAAAC,EAAAC,cAAC4C,EAAD,CAAMnB,SAAUO,KAAKI,MAAMX,SAAUC,UAAW,CAAC,MAAO,OACrDjB,EAAaoC,KFzBE,IAACH,SEKTI,IAAMC,WCNxBC,IAASC,OAAOnD,EAAAC,EAAAC,cAACkD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.43527646.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nexport const Card = (props: any) => (\n  <div className={`Card ${props.class || \"\"}`} style={props.style}>\n    {props.children}\n  </div>\n);\n","const baseSlideLength: number = 0.6;\nconst additionalSlideLength: number = 0.12;\n\nexport const slideIn = (index: number) => {\n  return {\n    animation: `slide ${baseSlideLength +\n      additionalSlideLength * index}s ease forwards`\n  };\n};\n\nexport const enableScroll = (count: number) => {\n  return {\n    animation: `enableScroll ${baseSlideLength +\n      additionalSlideLength * count}s linear forwards`\n  };\n};\n","import React from \"react\";\nimport \"./Software.css\";\nimport { Card } from \"../Card/Card\";\nimport { SoftwareDef } from \"../../models/Software\";\nimport { slideIn, enableScroll } from \"../../utils/Animation\";\n\nconst SoftwareList = (input: SoftwareDef[]) => (\n  <div className=\"SoftwareList\" style={enableScroll(input.length)}>\n    {input.map((current, index) => Software(current, index))}\n  </div>\n);\n\nexport default SoftwareList;\n\nconst Software = (input: SoftwareDef, index: number) => (\n  <Card class=\"Software\" style={slideIn(index)}>\n    <div className=\"Header\">\n      <img src={`svg/${input.logo}`} alt={input.name} />\n      <b>{input.name}</b>\n    </div>\n    <p>{input.desc}</p>\n    {/* <a href={input.link}>{input.link}</a> */}\n  </Card>\n);\n","import React from \"react\";\nimport \"./Navbar.css\";\n\nexport const Navbar = (props: any) => (\n  <div className=\"Navbar\">{props.children}</div>\n);\nexport const MenuButton = (func: any) => (\n  <i onClick={func} className=\"MenuButton material-icons\">\n    menu\n  </i>\n);\n","import React from \"react\";\nimport \"./Menu.css\";\ninterface MenuProps {\n  children: any;\n  menuOpen: boolean;\n  menuItems: string[];\n}\nconst menuWidth = \"200px\";\nexport const Menu = (props: MenuProps) => (\n  // Offset to line up with navbar\n  <div className=\"ContentOffset\">\n    <div className=\"Menu\" style={{ width: props.menuOpen ? menuWidth : 0 }}>\n      {/* Extra element with same width as parent so we don't get squishing while minimizing */}\n      <div className=\"MenuContent\" style={{ width: menuWidth }}>\n        {props.menuItems.map((menuItem: string) => (\n          <div>{menuItem}</div>\n        ))}\n      </div>\n    </div>\n    <span className=\"Content\">{props.children}</span>\n  </div>\n);\n","import React from \"react\";\nimport \"./App.css\";\nimport SoftwareList from \"../Software/Software\";\nimport software from \"../../json/software.json\";\nimport { Navbar, MenuButton } from \"../Navbar/Navbar\";\nimport { Menu } from \"../Menu/Menu\";\n\ninterface AppState {\n  menuOpen: boolean;\n}\n\nclass App extends React.Component<any, AppState> {\n  constructor(props: any) {\n    super(props);\n    this.state = { menuOpen: true };\n\n    this.toggleMenu = this.toggleMenu.bind(this);\n  }\n\n  toggleMenu() {\n    this.setState({ menuOpen: !this.state.menuOpen });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar>\n          {MenuButton(this.toggleMenu)}\n          <span className=\"Title\">Software Listing</span>\n        </Navbar>\n        <Menu menuOpen={this.state.menuOpen} menuItems={[\"All\", \"OS\"]}>\n          {SoftwareList(software)}\n        </Menu>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}