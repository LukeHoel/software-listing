{"version":3,"sources":["Store/State.ts","Store/Reducers.ts","Store/Actions.ts","Store/Store.ts","components/Navbar/Navbar.tsx","components/SearchMenu/SearchMenu.tsx","utils/Search.ts","components/Menu/Menu.tsx","components/Card/Card.tsx","utils/Animation.ts","components/LoadingIndicator/LoadingIndicator.tsx","components/AvailablePlatforms/AvailablePlatforms.tsx","components/SearchResults/SearchResults.tsx","components/App/App.tsx","index.tsx"],"names":["InitialState","menuOpen","loading","searchResults","reducerMap","_reducerMap","INIT","Object","defineProperty","state","objectSpread","action","toConsumableArray","store","createStore","type","window","__REDUX_DEVTOOLS_EXTENSION__","dispatch","Navbar","props","react_default","a","createElement","className","onClick","children","SearchMenu","_React$Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","searchText","submit","bind","assertThisInitialized","inherits","createClass","key","value","event","url","xhttp","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","open","concat","send","search","preventDefault","_this2","style","width","menuWidth","onSubmit","onChange","e","setState","target","React","Component","connect","SearchMenu_SearchMenu_SearchMenu","Card","class","calculateSlideLength","num","Math","min","slideIn","index","animation","LoadingIndicator","AvailablePlatforms","platforms","sort","map","platform","src","alt","Platform","count","length","LoadingIndicator_LoadingIndicator_LoadingIndicator","current","input","Card_Card_Card","name","AvailablePlatforms_AvailablePlatforms_AvailablePlatforms","SearchResult","App","toggleMenu","searchParams","Navbar_Navbar_Navbar","components_Menu_Menu","SearchResults_SearchResults","ReactDOM","render","es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.dba8592e.chunk.js","sourcesContent":["export interface State {\n  menuOpen: boolean;\n  loading: boolean;\n  searchResults: any[];\n}\n\nexport const InitialState: State = {\n  menuOpen: true,\n  loading: false,\n  searchResults: []\n};\n","import { InitialState, State } from \"./State\";\nimport {\n  ToggleMenuAction,\n  CompleteSearchAction,\n  StartSearchAction\n} from \"./Actions\";\n\n// Open and close menu\nconst ToggleMenuReducer = (state: State): State => ({\n  ...state,\n  menuOpen: !state.menuOpen\n});\n\n// Display loading indicator and remove old search results\nconst StartSearchReducer = (state: State) => ({\n  ...state,\n  loading: true,\n  searchResults: []\n});\n\n// Hide loading indicator and display new search results\nconst CompleteSearchReducer = (state: State, action: any) => ({\n  ...state,\n  loading: false,\n  searchResults: [...action.searchResults]\n});\n\nexport const reducerMap: any = {\n  INIT: () => InitialState,\n  [ToggleMenuAction]: ToggleMenuReducer,\n  [StartSearchAction]: StartSearchReducer,\n  [CompleteSearchAction]: CompleteSearchReducer\n};\n","export const ToggleMenuAction = \"TOGGLE_MENU\";\nexport const StartSearchAction = \"START_SEARCH\";\nexport const CompleteSearchAction = \"COMPLETE_SEARCH\";\n","import { createStore } from \"redux\";\nimport { State } from \"./State\";\nimport { reducerMap } from \"./Reducers\";\n\n// Avoid giant switch statement tree with a simple reducer Map variable\nexport const Reducer = (state: State, action: any) => ({\n  ...(action.type in reducerMap\n    ? reducerMap[action.type](state, action)\n    : state)\n});\n\n// Setup to connect to devtools\nexport const store = createStore(\n  Reducer,\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n// Initialize state\nstore.dispatch({ type: \"INIT\" });\n","import React from \"react\";\nimport \"./Navbar.css\";\nimport { store } from \"../../Store/Store\";\nimport { ToggleMenuAction } from \"../../Store/Actions\";\n\nexport const Navbar = (props: any) => (\n  <div className=\"Navbar\">\n    <i\n      onClick={() => store.dispatch({ type: ToggleMenuAction })}\n      className=\"MenuButton material-icons\"\n    >\n      menu\n    </i>\n    <span className=\"Title\">Software Listing</span>\n    {props.children}\n  </div>\n);\n","import React from \"react\";\nimport { menuWidth } from \"../Menu/Menu\";\nimport { search } from \"../../utils/Search\";\nimport \"./SearchMenu.css\";\ninterface SearchMenuState {\n  searchText: string;\n}\nexport class SearchMenu extends React.Component<any, SearchMenuState> {\n  constructor(props: any) {\n    super(props);\n    this.state = { searchText: \"\" };\n\n    this.submit = this.submit.bind(this);\n  }\n\n  submit(event: any) {\n    search(`search/${this.state.searchText}`);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"SearchMenu\" style={{ width: menuWidth }}>\n        <form onSubmit={this.submit}>\n          <input\n            type=\"text\"\n            value={this.state.searchText}\n            onChange={e => this.setState({ searchText: e.target.value })}\n          />\n          <input type=\"submit\" value=\"Search\" />\n        </form>\n      </div>\n    );\n  }\n}\n","import { store } from \"../Store/Store\";\nimport { CompleteSearchAction, StartSearchAction } from \"../Store/Actions\";\n\nconst distUrl = \"https://software-listing-backend.herokuapp.com\";\nconst devUrl = \"http://localhost:8080\";\n\nexport const baseUrl =\n  process.env.NODE_ENV === \"development\" ? devUrl : distUrl;\n\nexport const search = (url: string) => {\n  const xhttp = new XMLHttpRequest();\n  xhttp.onreadystatechange = function() {\n    if (this.readyState === 4 && this.status === 200) {\n      store.dispatch({\n        type: CompleteSearchAction,\n        searchResults: JSON.parse(this.responseText)\n      });\n    }\n  };\n\n  xhttp.open(\"GET\", `${baseUrl}/${url}`, true);\n  store.dispatch({ type: StartSearchAction });\n  xhttp.send();\n};\n","import React from \"react\";\nimport \"./Menu.css\";\nimport { SearchMenu } from \"../SearchMenu/SearchMenu\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../../Store/State\";\ninterface MenuProps {\n  children: any;\n  menuOpen: boolean;\n}\nexport const menuWidth = \"200px\";\nconst Menu = (props: any) => (\n  // Offset to line up with navbar\n  <div className=\"ContentOffset\">\n    <div className=\"Menu\" style={{ width: props.menuOpen ? menuWidth : 0 }}>\n      <SearchMenu />\n    </div>\n    <span className=\"Content\">{props.children}</span>\n  </div>\n);\nexport default connect((state: State) => ({ menuOpen: state.menuOpen }))(Menu);\n","import React from \"react\";\nimport \"./Card.css\";\n\nexport const Card = (props: any) => (\n  <div className={`Card ${props.class || \"\"}`} style={props.style}>\n    {props.children}\n  </div>\n);\n","// The behavior here is to slide in with base length that gets longer for each element, getting a nice \"slide in\" effect\n// Gets cut off at a certain point to avoid long lists animating for way too long\nconst baseSlideLength: number = 0.6;\nconst additionalSlideLength: number = 0.12;\nconst maxSlideLength = 2;\n\nconst calculateSlideLength = (num: number) =>\n  Math.min(maxSlideLength, baseSlideLength + additionalSlideLength * num);\n\nexport const slideIn = (index: number) => {\n  return {\n    animation: `slide ${calculateSlideLength(index)}s ease forwards`\n  };\n};\n\nexport const enableScroll = (count: number) => {\n  return {\n    animation: `enableScroll ${calculateSlideLength(count)}s linear forwards`\n  };\n};\n","import React from \"react\";\nimport \"./LoadingIndicator.css\";\n\nexport const LoadingIndicator = (props: any) => (\n  <div className=\"LoadingIndicator\">\n    <div className=\"LoadingBall First\" />\n    <div className=\"LoadingBall Second\" />\n    <div className=\"LoadingBall Third\" />\n  </div>\n);\n","import React from \"react\";\nimport \"./AvailablePlatforms.css\";\n\nconst Platform = (platform: string) => (\n  <img className=\"Platform\" src={`svg/${platform}.svg`} alt={\"\"} />\n);\n\nexport const AvailablePlatforms = (props: any) => (\n  <div className=\"AvailablePlatforms\">\n    <label>Available Platforms</label>\n    {props.platforms.sort().map((platform: string) => Platform(platform))}\n  </div>\n);\n","import React from \"react\";\nimport \"./SearchResults.css\";\nimport { Card } from \"../Card/Card\";\nimport { SearchResultDef } from \"../../models/SearchResultDef\";\nimport { slideIn, enableScroll } from \"../../utils/Animation\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../../Store/State\";\nimport { LoadingIndicator } from \"../LoadingIndicator/LoadingIndicator\";\nimport { AvailablePlatforms } from \"../AvailablePlatforms/AvailablePlatforms\";\n\nconst SearchResult = (input: SearchResultDef, index: number) => (\n  <Card class=\"SearchResult\" style={slideIn(index)}>\n    <div className=\"Header\">\n      <b>{input.name}</b>\n    </div>\n    <AvailablePlatforms platforms={input.platforms || []} />\n  </Card>\n);\n\nconst ResultPlaceholder = (loading: boolean) => (\n  <div className=\"ResultPlaceholder\">\n    {loading ? <LoadingIndicator /> : \"No Results\"}\n  </div>\n);\n\n// Handle animation for each sliding in on load with helpers\nconst SearchResultList = (props: any) => (\n  <div\n    className=\"SearchResultList\"\n    style={enableScroll(props.searchResults.length)}\n  >\n    {/* Results placeholder or loading symbol */}\n    {props.searchResults.length === 0 ? ResultPlaceholder(props.loading) : \"\"}\n\n    {props.searchResults.map((current: SearchResultDef, index: number) =>\n      SearchResult(current, index)\n    )}\n  </div>\n);\n\nexport default connect((state: State) => ({\n  loading: state.loading,\n  searchResults: state.searchResults\n}))(SearchResultList);\n","import React from \"react\";\nimport \"./App.css\";\nimport { Navbar } from \"../Navbar/Navbar\";\nimport Menu from \"../Menu/Menu\";\nimport SearchResults from \"../SearchResults/SearchResults\";\n\ninterface AppState {\n  menuOpen: boolean;\n  searchResults: any[];\n}\n\nclass App extends React.Component<any, AppState> {\n  constructor(props: any) {\n    super(props);\n    this.state = { menuOpen: true, searchResults: [] };\n\n    this.toggleMenu = this.toggleMenu.bind(this);\n  }\n\n  toggleMenu() {\n    this.setState({ menuOpen: !this.state.menuOpen });\n  }\n\n  search(searchParams: any) {}\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar />\n        <Menu>\n          <SearchResults />\n        </Menu>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./Store/Store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}