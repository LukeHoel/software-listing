{"version":3,"sources":["components/Navbar/Navbar.tsx","components/Card/Card.tsx","utils/Animation.ts","components/LoadingIndicator/LoadingIndicator.tsx","components/AvailablePlatforms/AvailablePlatforms.tsx","Store/State.ts","Store/Reducers.ts","Store/Actions.ts","Store/Store.ts","components/SearchResultDetail/SearchResultDetail.tsx","components/SearchResults/SearchResults.tsx","components/Modal/Modal.tsx","components/SearchMenu/SearchMenu.tsx","utils/Search.ts","components/Menu/Menu.tsx","components/App/App.tsx","index.tsx"],"names":["Navbar","props","react_default","a","createElement","className","children","Card","concat","style","onClick","slideIn","index","animation","num","Math","min","LoadingIndicator","AvailablePlatforms","platforms","sort","map","platform","src","alt","Platform","InitialState","loading","searchResults","modalContent","undefined","reducerMap","_reducerMap","INIT","Object","defineProperty","state","objectSpread","action","toConsumableArray","store","createStore","type","window","__REDUX_DEVTOOLS_EXTENSION__","dispatch","SearchResultDetail","input","name","AvailablePlatforms_AvailablePlatforms_AvailablePlatforms","connect","length","LoadingIndicator_LoadingIndicator_LoadingIndicator","current","Card_Card_Card","SearchResult","e","stopPropagation","SearchMenu","_React$Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","searchText","submit","bind","assertThisInitialized","inherits","createClass","key","value","event","url","xhttp","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","open","send","search","preventDefault","_this2","onSubmit","onChange","setState","target","React","Component","Menu_Menu","SearchMenu_SearchMenu_SearchMenu","App","menuOpen","toggleMenu","searchParams","Navbar_Navbar_Navbar","SearchResults_SearchResults","components_Modal_Modal","content","root","document","getElementById","ReactDOM","render","es","components_App_App","addEventListener","getState"],"mappings":"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","file":"static/js/main.8b369096.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Navbar.css\";\n\nexport const Navbar = (props: any) => (\n  <div className=\"Navbar\">\n    <span className=\"Title\">Software Listing</span>\n    {props.children}\n  </div>\n);\n","import React from \"react\";\nimport \"./Card.css\";\n\nexport const Card = (props: any) => (\n  <div\n    className={`Card ${props.className || \"\"}`}\n    style={props.style}\n    onClick={props.onClick}\n  >\n    {props.children}\n  </div>\n);\n","// The behavior here is to slide in with base length that gets longer for each element, getting a nice \"slide in\" effect\n// Gets cut off at a certain point to avoid long lists animating for way too long\nconst baseSlideLength: number = 0.6;\nconst additionalSlideLength: number = 0.12;\nconst maxSlideLength = 2;\n\nconst calculateSlideLength = (num: number) =>\n  Math.min(maxSlideLength, baseSlideLength + additionalSlideLength * num);\n\nexport const slideIn = (index: number) => {\n  return {\n    animation: `slide ${calculateSlideLength(index)}s ease forwards`\n  };\n};\n","import React from \"react\";\nimport \"./LoadingIndicator.css\";\n\nexport const LoadingIndicator = (props: any) => (\n  <div className=\"LoadingIndicator\">\n    <div className=\"LoadingBall First\" />\n    <div className=\"LoadingBall Second\" />\n    <div className=\"LoadingBall Third\" />\n  </div>\n);\n","import React from \"react\";\nimport \"./AvailablePlatforms.css\";\n\nconst Platform = (platform: string) => (\n  <img className=\"Platform\" src={`svg/${platform}.svg`} alt={\"\"} />\n);\n\ninterface AvailablePlatformsProps {\n  platforms: string[];\n}\n\nexport const AvailablePlatforms = (props: AvailablePlatformsProps) => (\n  <div className=\"AvailablePlatforms\">\n    <label>Available Platforms</label>\n    {props.platforms.sort().map((platform: string) => Platform(platform))}\n  </div>\n);\n","export interface State {\n  loading: boolean;\n  searchResults: any[];\n  modalContent: any;\n}\n\nexport const InitialState: State = {\n  loading: false,\n  searchResults: [],\n  modalContent: undefined\n};\n","import { InitialState, State } from \"./State\";\nimport {\n  CompleteSearchAction,\n  StartSearchAction,\n  OpenModalAction,\n  CloseModalAction\n} from \"./Actions\";\n\n// Display loading indicator and remove old search results\nconst StartSearchReducer = (state: State) => ({\n  ...state,\n  loading: true,\n  searchResults: []\n});\n\n// Hide loading indicator and display new search results\nconst CompleteSearchReducer = (state: State, action: any) => ({\n  ...state,\n  loading: false,\n  searchResults: [...action.searchResults]\n});\n\n// Open modal with content\nconst OpenModalReducer = (state: State, action: any) => ({\n  ...state,\n  modalContent: action.modalContent\n});\n\nconst CloseModalReducer = (state: State) => ({\n  ...state,\n  modalContent: undefined\n});\n\nexport const reducerMap: any = {\n  INIT: () => InitialState,\n  [StartSearchAction]: StartSearchReducer,\n  [CompleteSearchAction]: CompleteSearchReducer,\n  [OpenModalAction]: OpenModalReducer,\n  [CloseModalAction]: CloseModalReducer\n};\n","export const StartSearchAction = \"START_SEARCH\";\nexport const CompleteSearchAction = \"COMPLETE_SEARCH\";\nexport const OpenModalAction = \"OPEN_MODAL\";\nexport const CloseModalAction = \"CLOSE_MODAL\";\n","import { createStore } from \"redux\";\nimport { State } from \"./State\";\nimport { reducerMap } from \"./Reducers\";\n\n// Avoid giant switch statement tree with a simple reducer Map variable\nexport const Reducer = (state: State, action: any) => ({\n  ...(action.type in reducerMap\n    ? reducerMap[action.type](state, action)\n    : state)\n});\n\n// Setup to connect to devtools\nexport const store = createStore(\n  Reducer,\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n// Initialize state\nstore.dispatch({ type: \"INIT\" });\n","import React from \"react\";\nimport { SearchResultDef } from \"../../models/SearchResultDef\";\nimport { AvailablePlatforms } from \"../AvailablePlatforms/AvailablePlatforms\";\nexport const SearchResultDetail = (input: SearchResultDef) => (\n  <div>\n    <b>{input.name}</b>\n    <AvailablePlatforms platforms={input.platforms} />\n  </div>\n);\n","import React from \"react\";\nimport \"./SearchResults.css\";\nimport { Card } from \"../Card/Card\";\nimport { SearchResultDef } from \"../../models/SearchResultDef\";\nimport { slideIn } from \"../../utils/Animation\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../../Store/State\";\nimport { LoadingIndicator } from \"../LoadingIndicator/LoadingIndicator\";\nimport { AvailablePlatforms } from \"../AvailablePlatforms/AvailablePlatforms\";\nimport { store } from \"../../Store/Store\";\nimport { OpenModalAction } from \"../../Store/Actions\";\nimport { SearchResultDetail } from \"../SearchResultDetail/SearchResultDetail\";\n\nconst SearchResult = (input: SearchResultDef, index: number) => (\n  <Card\n    className=\"SearchResult\"\n    style={slideIn(index)}\n    onClick={() =>\n      store.dispatch({\n        type: OpenModalAction,\n        modalContent: SearchResultDetail(input)\n      })\n    }\n  >\n    <div className=\"Header\">\n      <b>{input.name}</b>\n    </div>\n    <AvailablePlatforms platforms={input.platforms} />\n  </Card>\n);\n\nconst ResultPlaceholder = (loading: boolean) => (\n  <div className=\"ResultPlaceholder\">\n    {loading ? <LoadingIndicator /> : \"No Results\"}\n  </div>\n);\n\n// Handle animation for each sliding in on load with helpers\nconst SearchResultList = (props: any) => (\n  <div className=\"SearchResultList\">\n    {/* Results placeholder or loading symbol */}\n    {props.searchResults.length === 0 ? ResultPlaceholder(props.loading) : \"\"}\n\n    {props.searchResults.map((current: SearchResultDef, index: number) =>\n      SearchResult(current, index)\n    )}\n  </div>\n);\n\nexport default connect((state: State) => ({\n  loading: state.loading,\n  searchResults: state.searchResults\n}))(SearchResultList);\n","import React from \"react\";\nimport { Card } from \"../Card/Card\";\nimport \"./Modal.css\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../../Store/State\";\nimport { store } from \"../../Store/Store\";\nimport { CloseModalAction } from \"../../Store/Actions\";\nconst Modal = (props: any) => (\n  <div\n    className={`ModalContainer \n    ${props.modalContent !== undefined ? \"ModalOpened\" : \"ModalClosed\"}`}\n    onClick={() => store.dispatch({ type: CloseModalAction })}\n  >\n    <Card className=\"Modal\" onClick={(e: MouseEvent) => e.stopPropagation()}>\n      {props.modalContent}\n    </Card>\n  </div>\n);\n\nexport default connect((state: State) => ({\n  modalContent: state.modalContent\n}))(Modal);\n","import React from \"react\";\nimport { search } from \"../../utils/Search\";\nimport \"./SearchMenu.css\";\ninterface SearchMenuState {\n  searchText: string;\n}\nexport class SearchMenu extends React.Component<any, SearchMenuState> {\n  constructor(props: any) {\n    super(props);\n    this.state = { searchText: \"\" };\n\n    this.submit = this.submit.bind(this);\n  }\n\n  submit(event: any) {\n    search(`search/${this.state.searchText}`);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"SearchMenu\">\n        <form onSubmit={this.submit}>\n          <input\n            type=\"text\"\n            value={this.state.searchText}\n            onChange={e => this.setState({ searchText: e.target.value })}\n          />\n          <input type=\"submit\" value=\"Search\" />\n        </form>\n      </div>\n    );\n  }\n}\n","import { store } from \"../Store/Store\";\nimport { CompleteSearchAction, StartSearchAction } from \"../Store/Actions\";\n\nconst distUrl = \"https://software-listing-backend.herokuapp.com\";\nconst devUrl = \"http://localhost:8080\";\n\nexport const baseUrl =\n  process.env.NODE_ENV === \"development\" ? devUrl : distUrl;\n\nexport const search = (url: string) => {\n  const xhttp = new XMLHttpRequest();\n  xhttp.onreadystatechange = function() {\n    if (this.readyState === 4 && this.status === 200) {\n      store.dispatch({\n        type: CompleteSearchAction,\n        searchResults: JSON.parse(this.responseText)\n      });\n    }\n  };\n\n  xhttp.open(\"GET\", `${baseUrl}/${url}`, true);\n  store.dispatch({ type: StartSearchAction });\n  xhttp.send();\n};\n","import React from \"react\";\nimport \"./Menu.css\";\nimport { SearchMenu } from \"../SearchMenu/SearchMenu\";\n\nexport default (props: any) => (\n  // Offset to line up with navbar\n  <div className=\"ContentOffset\">\n    <div className=\"Menu\">\n      <SearchMenu />\n    </div>\n    <span className=\"Content\">{props.children}</span>\n  </div>\n);\n","import React from \"react\";\nimport \"./App.css\";\nimport { Navbar } from \"../Navbar/Navbar\";\nimport SearchResults from \"../SearchResults/SearchResults\";\nimport Modal from \"../Modal/Modal\";\nimport Menu from \"../Menu/Menu\";\n\ninterface AppState {\n  menuOpen: boolean;\n  searchResults: any[];\n}\n\nclass App extends React.Component<any, AppState> {\n  constructor(props: any) {\n    super(props);\n    this.state = { menuOpen: true, searchResults: [] };\n\n    this.toggleMenu = this.toggleMenu.bind(this);\n  }\n\n  toggleMenu() {\n    this.setState({ menuOpen: !this.state.menuOpen });\n  }\n\n  search(searchParams: any) {}\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar />\n        <Menu>\n          <SearchResults />\n        </Menu>\n        <Modal content={<div>Test content</div>} />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./Store/Store\";\nimport { CloseModalAction } from \"./Store/Actions\";\n\nconst root = document.getElementById(\"root\");\nif (root) {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    root\n  );\n\n  document.addEventListener(\"keydown\", (e: any) => {\n    // If a modal is open, close it with escape\n    if (e.key === \"Escape\" && store.getState().modalContent !== undefined) {\n      store.dispatch({ type: CloseModalAction });\n    }\n  });\n}\n"],"sourceRoot":""}